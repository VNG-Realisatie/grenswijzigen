% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vertaal_postcode_naar_regio_op_peiljaar.R
\name{vertaal_postcode_naar_regio_op_peiljaar}
\alias{vertaal_postcode_naar_regio_op_peiljaar}
\title{Functie die data op postcode niveau omzet naar data op wijk- of gemeenteniveau}
\usage{
vertaal_postcode_naar_regio_op_peiljaar(
  df,
  oorspronkelijk_jaar,
  peiljaar,
  type_kolommen = "aantal",
  regionaalniveau = "wijk"
)
}
\arguments{
\item{df}{data.frame op postcode niveau dat omgezet moet worden.}

\item{oorspronkelijk_jaar}{het jaar waaruit de data in df afkomstig is.}

\item{peiljaar}{jaar waarnaartoe de features moeten worden omgezet}

\item{type_kolommen}{welk type is de kolom, 'aantal' of 'aandeel'?}

\item{regionaalniveau}{op welk regionaalniveau moet de omzetting plaats vinden? Keuze uit 'wijk' en 'gemeente'.}
}
\value{
Omgezet data-frame
}
\description{
Functie die data op postcode niveau omzet naar data op wijk- of gemeenteniveau
}
\examples{
library(grenswijzigen)
library(cbsodataR)
library(dplyr)

# laad de bevolkingsgrootte per 4-cijferige postcode
df.postcode <- cbs_get_data(
  id = "83502NED",
  Geslacht = "T001038",
  Leeftijd = "10000",
  Postcode = has_substring("PC"),
  Perioden = "2020JJ00",
  select = c("Geslacht", "Leeftijd", "Postcode", "Perioden", "Bevolking_1")
) \%>\% mutate(
  Postcode = gsub("\\\\D", "", Postcode)
) \%>\% select("Postcode", "Bevolking_1")

# zet om naar wijk
df.vertaald = vertaal_postcode_naar_regio_op_peiljaar(
  df.postcode,
  oorspronkelijk_jaar = 2020,
  peiljaar = 2021,
  type_kolommen = "aantal",
  regionaalniveau = "wijk"
)

print(head(df.vertaald))
# gwb_code Bevolking_1 jaar
# 1     1400   23400.192 2020
# 2     1401   19864.358 2020
# 3     1402   14374.962 2020
# 4     1403   18545.000 2020
# 5     1404   11841.837 2020
# 6     1405    3996.121 2020

# laad de bevolkingsgrootte uit de KWB-data
df.wijk <- cbs_get_data(
  id="85039NED",
  WijkenEnBuurten = has_substring("WK"),
  select = c("WijkenEnBuurten", "AantalInwoners_5")
)

print(head(df.wijk \%>\% arrange(WijkenEnBuurten)))
# # A tibble: 6 x 2
#   WijkenEnBuurten AantalInwoners_5
#   <chr>                      <int>
# 1 "WK001400  "               22730
# 2 "WK001401  "               19695
# 3 "WK001402  "               14055
# 4 "WK001403  "               18410
# 5 "WK001404  "               12355
# 6 "WK001405  "                3290


}
